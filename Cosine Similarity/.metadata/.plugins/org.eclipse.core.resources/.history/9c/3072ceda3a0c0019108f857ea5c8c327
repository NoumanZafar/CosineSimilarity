package ie.gmit.sw;

import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

public class QueryProcess {
	private BlockingQueue<Shingle> queue;
	private ExecutorService pool;
	private ConcurrentHashMap<String, Integer> queryMap = new ConcurrentHashMap<String, Integer>();

	public QueryProcess() {
		super();
	}

	public void queryFileRead(String fileName) {
		queue = new ArrayBlockingQueue<Shingle>(1);
		pool = Executors.newFixedThreadPool(2);

		Future<ConcurrentHashMap<String, Integer>> map = pool.submit(new QueryShingleTaker(queue));
		try {
			Thread.sleep(10);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		pool.submit(new QueryFileParser(queue, fileName));
		try {
			Thread.sleep(10);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}

		try {
			this.queryMap = map.get();
			System.out.println("Map from process class : " + this.queryMap);
		} catch (InterruptedException e) {
			e.printStackTrace();
		} catch (ExecutionException e) {
			e.printStackTrace();
		}

		pool.shutdown();
		System.out.println("Shutdown....");
	}
}
