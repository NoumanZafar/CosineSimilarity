package ie.gmit.sw;

import java.io.File;
import java.util.*;
import java.util.concurrent.*;

public class SubjectFileProcess {
	private BlockingQueue<Shingle> queue;
	private ExecutorService pool;
	private int fileCount;
	private List<ConcurrentHashMap<String, Integer>> list;
	private List<String> nameList;
	
	public SubjectFileProcess(List<String> nameList) {
		super();
		this.nameList=nameList;
	}

	public List<ConcurrentHashMap<String, Integer>> readSubjectFolder(String folderName)
			throws InterruptedException, ExecutionException {
		nameList=new ArrayList<String>();
		queue = new ArrayBlockingQueue<>(1);
		pool = Executors.newFixedThreadPool(2);
		File folder = new File(folderName);
		String[] files = folder.list();
		fileCount = files.length;
		Future<List<ConcurrentHashMap<String, Integer>>> l = pool.submit(new SubjectShingleTaker(queue, fileCount));
		for (String s : files) {
			pool.submit(new QueryFileParser(queue, folderName + "/" + s));
			nameList.add(s);
			Thread.sleep(10);
		}
		this.list = l.get();
		pool.shutdown();
		return list;
	}
	
	public List<String> getList(){
		return nameList;
	}
}