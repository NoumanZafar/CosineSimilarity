package ie.gmit.sw;

import java.util.*;
import java.util.concurrent.*;

public class SubjectShingleTaker implements Callable<List<ConcurrentHashMap<String, Integer>>> {
	private BlockingQueue<Shingle> queue;
	private int fileCount;
	private boolean keepRunning = true;
	private ConcurrentHashMap<String, Integer> subjectMap;
	private List<ConcurrentHashMap<String, Integer>> list;

	public SubjectShingleTaker(BlockingQueue<Shingle> queue, int fileCount) {
		super();
		this.subjectMap = new ConcurrentHashMap<String, Integer>();
		this.list = new ArrayList<ConcurrentHashMap<String, Integer>>();
		this.queue = queue;
		this.fileCount = fileCount;
	}

	public List<ConcurrentHashMap<String, Integer>> call() throws Exception {
		while (this.fileCount > 0 && this.keepRunning) {
			Shingle w = this.queue.take();
			if (w instanceof Poison) {
				this.list.add(this.subjectMap);
				this.subjectMap = new ConcurrentHashMap<String, Integer>();
				this.fileCount--;
			} else {
				String shingle = w.getShingle();
				Integer n = this.subjectMap.get(shingle);
				n = (n == null) ? 1 : ++n;
				this.subjectMap.put(shingle, n);
			}
		}
		return this.list;
	}
}
