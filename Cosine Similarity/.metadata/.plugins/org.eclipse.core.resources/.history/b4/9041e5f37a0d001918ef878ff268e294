package ie.gmit.sw;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.Reader;
import java.util.Arrays;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.Callable;

public class FileParser implements Callable<Object> {
	private String fileName;
	private BlockingQueue<Shingle> queue;

	public FileParser(BlockingQueue<Shingle> queue, String fileName) {
		super();
		this.queue = queue;
		this.fileName = fileName;
	}


	public Object call() throws Exception {
		try {
			Reader reader =new InputStreamReader(new FileInputStream(fileName),"UTF-8");
			char[] chars=new char[5];
			int charRead = -1;
			StringBuffer sb;
			while((charRead = read(reader,chars)) != -1) {
				sb=new StringBuffer();
				if (charRead != 5) {
					int add=charRead % 5;
					int run=5-add;
					for(int i=0;i < run;i++) {
						chars[add+i]=' ';
					}
				}
				String shingle=Arrays.toString(chars).replaceAll("[^A-Za-z0-9 ]", "").replace(' ', '_');
				System.out.println(shingle);
				queue.put(new Shingle(this.fileName, shingle));
			}
			queue.put(new Poison(fileName, "END-OF-FILE"));
			reader.close();
		} catch (IOException | InterruptedException e) {
			e.printStackTrace();
		}
		return null;
	}
	
	public int read(Reader reader,char[] chars) throws IOException{
		return reader.read(chars);
	}
	

	/*public Object call() throws Exception {
		try {
			BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(fileName)));
			String line;
			while ((line = br.readLine()) != null) {
				String[] words = line.split(" ");
				for (String s : words) {
					s = s.toUpperCase().replaceAll("[^A-Za-z0-9 ]", "");
					queue.put(new Shingle(this.fileName, s));
				}
			}
			queue.put(new Poison(fileName, "END-OF-FILE"));
			br.close();
		} catch (IOException | InterruptedException e) {
			e.printStackTrace();
		}
		return null;
	}*/
	
	
	
	
	
/*	Reader reader =new InputStreamReader(new FileInputStream(fileName),"UTF-8");
			char[] chars=new char[5];
			int charRead = -1;
			int count=0;
			while((charRead = read(reader,chars)) != -1) {
				//System.out.println(charRead);
				if (charRead != 5) {
					int add=charRead % 5;
					int run=5-add;
					//System.out.println(add);
					for(int i=0;i < run;i++) {
						chars[add+i]=' ';
					}
				}
				String shingle=new String(chars);
				System.out.println(shingle);
				queue.put(new Shingle(this.fileName, shingle));
				count++;
			}
			System.out.println(count);
			reader.close();*/
}